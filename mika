# mika.py
import os

import discord
from discord.message import Message
from dotenv import load_dotenv

import random
from datetime import datetime
from discord.ext import tasks

load_dotenv()
TOKEN = os.getenv('DISCORD_TOKEN')

client = discord.Client()

#Make sure bot is online.
@client.event
async def on_ready():
	print(f'{client.user} has connected to Discord!')

#Adds a question to the text file when called.
def question_add(question):
    with open('./questions.txt', 'a') as questions:
        questions.write('\n' + question)

def remove_question(qotd):
    with open ("./questions.txt", "r") as input:
        with open ("./temp.txt", "w") as output:
            for line in input:
                if line.strip("\n") != qotd:
                    output.write(line)
    os.replace('./temp.txt', './questions.txt')

#Posts question of the day when called.
async def question_post(message):
    with open('./questions.txt', 'r') as questions:
        qlines = questions.read().splitlines()
        try:
            qotd = random.choice(qlines)
            await message.channel.send('QOTD: '+ qotd)
            remove_question(qotd)
        except:
            await message.channel.send("No questions left. Everyone submit one!")

        
#Scheduled to call question of the day.
@tasks.loop(minutes=60.0)
async def task(self):
    if datetime.now().hour == 19:
        await question_post(self)

#Reads for commands, which includes adding questions and testing
@client.event
async def on_message(message):
    if message.content.startswith('mika'):
        if message.content.startswith('mika add '):
            question = message.content.replace('mika add ','')
            question_add(question)
            await message.channel.send('QOTD ADDED: '+ question)
        if message.content.startswith('mika test'):
           await question_post(message)

client.run(TOKEN)
